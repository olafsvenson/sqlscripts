<?xml version="1.0" encoding="utf-8"?>
<Snippet xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Name>RequestResponseWithActivationCreate</Name>
  <Description>Create request response with activation</Description>
  <Text>-- ============================================================

--  Create the stored procedure

if exists (select * from dbo.sysobjects 
   where id = object_id(N'[dbo].[/*ssb-proc-name*/]') and OBJECTPROPERTY(id, N'IsProcedure') = 1)
drop procedure [dbo].[/*ssb-proc-name*/]
GO
SET ANSI_NULLS OFF
go
SET QUOTED_IDENTIFIER OFF
go

CREATE PROCEDURE [dbo].[/*ssb-proc-name*/]
   AS declare @message_body nvarchar(MAX)
   
   declare @message_type int
   declare @dialog uniqueidentifier 

while (1 = 1)
begin
	begin transaction

-- Receive the next available message from the queue
	
	WAITFOR (
		RECEIVE top(1) -- just handle one message at a time
			@message_type=message_type_id, --the type of message received
			@message_body=message_body,      -- the message contents
			@dialog = conversation_handle    -- the identifier of the dialog this message was received on
			FROM /*queue-name*/
	), TIMEOUT 1000  -- if the queue is empty for one second, give UPDATE and go away

-- If we didn't get anything, bail out
	if (@@ROWCOUNT = 0)
		BEGIN
			Rollback Transaction
			BREAK
		END 

-- Check for the End Dialog message.
	If (@message_type %% 2) -- End dialog message
	BEGIN
-- Send the message back to the sender.
		SEND ON CONVERSATION @dialog  -- send it back on the dialog we received the message on
			MESSAGE TYPE [/*Response-message-type*/] -- Must always supply a message type
			(@message_body);  -- the message contents (a varbinary(MAX) blob
	END

--  Commit the transaction.  At any point before this, we could roll 
--  back - the received message would be back on the queue and the response
--  wouldn't be sent.
	commit transaction
end
go


-- Create the required meta-data

CREATE MESSAGE TYPE /*Request-message-type*/ VALIDATION = NONE 

CREATE MESSAGE TYPE /*Response-message-type*/ VALIDATION = NONE 

CREATE CONTRACT /*contract-name*/
  ( /*Request-message-type*/ SENT BY INITIATOR,
    /*Response-message-type*/ SENT BY TARGET)

CREATE QUEUE /*queue-name*/
   WITH ACTIVATION (
      PROCEDURE_NAME = [/*ssb-proc-name*/] ,
      MAX_QUEUE_READERS = 5, 
      EXECUTE AS SELF ) 

CREATE SERVICE [/*service-name*/] 
   ON QUEUE /*queue-name*/

ALTER SERVICE [/*service-name*/] 
 ( ADD CONTRACT /*contract-name*/ )</Text>
</Snippet>